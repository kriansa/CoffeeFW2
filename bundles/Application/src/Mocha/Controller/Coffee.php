<?php

namespace App\Controller\Mocha;
use Core\View, Core\Asset, Core\URL, Core\Config,
Core\Inflector, Core\Controller\Basic as Controller,
Core\File, Core\Str, Core\Loader;

class Coffee extends Controller
{
	/**
	 * Disable for all the controller
	 * @var string
	 */
	public $theme = null;

	/**
	 * The default 404 not found action
	 *
	 * @return void
	 */
	public function reloadCacheAction()
	{
		/**
		 * Create the Core classes cache
		 */
		foreach (get_declared_classes() as $class)
		{
			if (Str::startsWith($class, 'Core\\') and ! is_subclass_of($class, '\\Exception'))
			{
				$fileName = Loader::getClassFile($class);
				$file = file_get_contents($fileName, FILE_USE_INCLUDE_PATH);
				$classes[] = addslashes($class);
				$files[] = "// File: <{$fileName}>\n" . trim(substr(trim($file), 5)) . "\n// End of file: <{$fileName}>";
			}
		}

		// Add the helper to the cache
		$file = file_get_contents(COREPATH . 'Helper.php');
		$files[] = "// File: <{$fileName}>\n" . trim(substr(trim($file), 5)) . "\n// End of file: <{$fileName}>";

		$content = '<?php' .
		'/**' .
		' * App class cache file' .
		' * Do not edit this file directly, any changes will be overwritten' .
		' * Created at ' . date('r') .
		' */' .
		'' .
		implode("\n\n", $files) .
		'' .
		'// Autoload the cached classes' .
		'$classes = [\'' . implode('\', \'', $classes) . '\'];' .
		'' .
		'foreach ($classes as $class) {' .
		'	if (method_exists($class, \'_init\'))' .
		'	{' .
		'		$class::_init();' .
		'	}' .
		'}';

		File::create(APPPATH . 'data' . DS . 'cache', 'classes.cache', $content, true);

		/**
		 * Create the Config cache
		 */
		$files = array_filter(File::listDir(APPPATH . 'config', 1));

		foreach ($files as $file)
		{
			$file = strtolower(pathinfo($file, PATHINFO_FILENAME));
			Config::load($file, 'production');
		}

		$content = 'return ' . var_export(Config::$items, true) . ';';
		File::create(APPPATH . 'data' . DS . 'cache', 'config.cache', $content, true);

		/**
		 * Create the Loader cache
		 */
		$paths = [APPPATH . 'classes', COREPATH . 'classes'];

		foreach ($paths as $path)
		{
			$path = realpath($path);
			$recursiveIterator = new RecursiveIteratorIterator(new RecursiveDirectoryIterator($path));

			foreach ( $recursiveIterator as $entry )
			{
				/** @var $entry SplFileInfo */
				$realPath = $entry->getRealPath();
				$classes[str_replace([$path . DS, '.php'], '', $realPath)] = $realPath;
			}
		}

		$content = 'return ' . var_export($classes, true) . ';';
		File::create(APPPATH . 'data' . DS . 'cache', 'loader.cache', $content, true);
	}
}